#lang racket

(define delta 0.001)

(define (cube-root x)
  (cube-root-iter 1.0 
             (+ 0.0 x) 
             x))

(define (cube-root-iter guess new-guess x)
  (if (good-enough? guess new-guess)
      new-guess
      (cube-root-iter new-guess 
                      (improve new-guess x) 
                      x)))

(define (good-enough? new-guess old-guess)
  (< (abs (- new-guess 
             old-guess))
     delta))

(define (improve guess x)
  (/ (+ (/ x 
        (sqr guess )) 
     (* 2 guess))
     3))

(define (average x y)
  (/ (+ x 
        y)
     2))
